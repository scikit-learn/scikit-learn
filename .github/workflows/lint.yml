# This workflow is used to trigger the commenter bot in bot-lint-comment.yml
# file. It stores the output of the linter to be used by the commenter bot.
name: Linter
permissions:
  contents: read

on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    # setting any permission will set everything else to none for GITHUB_TOKEN
    permissions:
      pull-requests: none

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          source build_tools/shared.sh
          # Include pytest compatibility with mypy
          pip install pytest $(get_dep ruff min) $(get_dep mypy min) cython-lint
          # we save the versions of the linters to be used in the error message later.
          python -c "from importlib.metadata import version; print(f\"ruff={version('ruff')}\")" >> /tmp/versions.txt
          python -c "from importlib.metadata import version; print(f\"mypy={version('mypy')}\")" >> /tmp/versions.txt
          python -c "from importlib.metadata import version; print(f\"cython-lint={version('cython-lint')}\")" >> /tmp/versions.txt

      - name: Run linting
        run: |
          set +e
          ./build_tools/linting.sh &> /tmp/linting_output.txt
          cat /tmp/linting_output.txt

      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-log
          path: |
            /tmp/linting_output.txt
            /tmp/versions.txt
          retention-days: 1
