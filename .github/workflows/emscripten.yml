name: Unit test for Pyodide
on:
  push:
  pull_request:

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check_build_trigger:
    name: Check build trigger
    runs-on: ubuntu-latest
    # To enable this workflow on a fork, comment out:
    if: github.repository == 'scikit-learn/scikit-learn'
    outputs:
      build: ${{ steps.check_build_trigger.outputs.build }}
    steps:
      - name: Checkout scikit-learn
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - id: check_build_trigger
        name: Check build trigger
        shell: bash
        run: |
          set -e
          set -x

          COMMIT_MSG=$(git log --no-merges -1 --oneline)

          # The commit marker "[pyodide]" will trigger the build when required
          if [[ "$GITHUB_EVENT_NAME" == schedule ||
                "$GITHUB_EVENT_NAME" == workflow_dispatch ||
                "$COMMIT_MSG" =~ \[pyodide\] ]]; then
              echo "build=true" >> $GITHUB_OUTPUT
          fi

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: check_build_trigger
    if: needs.check_build_trigger.outputs.build
    steps:
      - name: Checkout scikit-learn
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: pypa/cibuildwheel@42728e866bbc80d544a70825bd9990b9a26f1a50 # 2.23.1
        env:
          CIBW_PLATFORM: pyodide
          SKLEARN_SKIP_OPENMP_TEST: "true"
          SKLEARN_SKIP_NETWORK_TESTS: 1
          CIBW_TEST_REQUIRES: "pytest pandas"
          CIBW_TEST_COMMAND: "python -m pytest -svra --pyargs sklearn --durations 20 --showlocals"
