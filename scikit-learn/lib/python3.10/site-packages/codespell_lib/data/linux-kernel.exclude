N: Tom Dryas
 * Copyright (C) 1996 Thomas K. Dryas (tdyas@eden.rutgers.edu)
 * Copyright (C) 1996 Thomas K. Dryas (tdyas@eden.rutgers.edu)
 * Copyright (C) 1996 Thomas K. Dryas (tdyas@eden.rutgers.edu)
 *          Tom Dryas
 * Copyright (C) 1996 Thomas K. Dryas (tdyas@noc.rutgers.edu)
MODULE_AUTHOR("Thomas K. Dryas (tdyas@noc.rutgers.edu) and Eddie C. Dost  (ecd@skynet.be)");
 *  Thomas K. Dryas <tdyas@eden.rutgers.edu>
 * Added bdflush entry and intvec min/max checking, 2/23/96, Tom Dryas.
 *		Tom Dryas		:	Module support.
 *		Tom Dryas	:	Export net symbols.
 * Copyright (C) 1996,1997 Thomas K. Dryas (tdyas@eden.rutgers.edu)
MODULE_AUTHOR("Thomas K. Dryas and David S. Miller");



 * Sun people can't spell worth damn. "compatibility" indeed.
        .asciz "compatibility"
 * Sun people can't spell worth damn. "compatibility" indeed.
	.asciz "compatibility"


        Jonathan Teh Soon Yew <j.teh@iname.com>
    <j.teh@iname.com> and Alex van Kaam <darkside@cello.nl>.)
 <j.teh@iname.com>) */


inv24    - change timings parameters for 24bpp modes on Millennium and
           Millennium II. Specify this if you see strange color shadows around
           non-Millenium.
             Millennium I or II, because of these devices have hardware
* ThrustMaster Millennium 3D Inceptor
DC390F (Sym53c875) accepted this as well as my Millennium. But the Am53C974
	{   1, "ThrustMaster Millennium 3D Inceptor",	  6, 2, { 4, 2 }, { 4, 6 }, tmdc_abs, tmdc_btn_joy },
	 * DoC 2000 (it's in the Millennium docs), but it seems to work. */
	minfo->millennium = 1;
	int			millennium;
						/* 0 except for 6MB Millennium */
#define isMillenium(x)	 (x->millennium)
#define isMillenium(x)	 (x->millennium)
#define FB_AUX_TEXT_MGA_STEP16	3	/* MGA Millennium I: text, attr, 14 reserved bytes */
#define FB_ACCEL_MATROX_MGA2064W 16	/* Matrox MGA2064W (Millennium)	*/
#define FB_ACCEL_MATROX_MGA2164W 18	/* Matrox MGA2164W (Millennium II) */
#define FB_ACCEL_MATROX_MGA2164W_AGP 19	/* Matrox MGA2164W (Millennium II) */


 * Copyright (C) 2007 Marvell International Ltd.
 * Copyright (C) 2007-2008 Marvell International Ltd.

            dbug(1,dprintf("PTY/ETC/addCONF,relPLCI=%lx",relatedPLCIvalue));
            /* send PTY/ETC req, cannot check all states because of US stuff */
        dbug(1,dprintf("ETC OK"));
   {   /* first indication after ECT-Request on Consultation Call */
#define INT_CT_REJ 70       /* ETC rejected internal command        */
	__u8 ip_ect;	/* ETC codepoint of IPv4 header, pre-shifted */
			__u8 ece:1, cwr:1; /* TCP ETC bits */
/* set ETC codepoint from IP header.
		pr_info("new ETC codepoint %x out of mask\n", einfo->ip_ect);
		/* Funny extension: if ETC is not set on a segment,
		/* Not-retransmitted data segment: set ETC and inject CWR. */
			/* ACK or retransmitted segment: clear ETC|CE */
	 *  "The ECN-Capable Transport (ETC) bit would be set by the
	 * Now setting the ETC bit all the time, as it should not cause

 * Copyright Â© 2003 Agere Systems Inc.

S: 1326 De Val-Brillant
                <slot #2, id = 0x02, characters = "xtension which">

	at91_set_A_periph(AT91_PIN_PC1, 0);		/* [-SMOE-]{+SOME+} */

	_REGISTER_CLOCK(NULL, "etc", ect_clk)
infinite:
	bra	infinite
the read on an 8-byte boundary (e.g., if you seeked an odd number of bytes
#define ISN'T		   12 
    (Some conversion-factor data were contributed by Jonathan Teh Soon Yew
 From HWMon.cpp (Copyright 1998-2000 Jonathan Teh Soon Yew):
 (These conversions were contributed by Jonathan Teh Soon Yew
/* linear fits from HWMon.cpp (Copyright 1998-2000 Jonathan Teh Soon Yew)
/* 	__u16 palette:1; */
	__be32 palette;
	struct diu_addr palette;
	int virtualX, virtually;
	struct regid		archetype;
		.ident = "Toshiba Satellite S1800-814",
	at91_set_A_periph(AT91_PIN_PC1, 0);		/* SOME */
