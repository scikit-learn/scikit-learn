"""
font data tables for truetype and afm computer modern fonts
"""

from __future__ import annotations

from typing import overload

latex_to_bakoma = {
    "\\__sqrt__": ("cmex10", 0x70),
    "\\bigcap": ("cmex10", 0x5C),
    "\\bigcup": ("cmex10", 0x5B),
    "\\bigodot": ("cmex10", 0x4B),
    "\\bigoplus": ("cmex10", 0x4D),
    "\\bigotimes": ("cmex10", 0x4F),
    "\\biguplus": ("cmex10", 0x5D),
    "\\bigvee": ("cmex10", 0x5F),
    "\\bigwedge": ("cmex10", 0x5E),
    "\\coprod": ("cmex10", 0x61),
    "\\int": ("cmex10", 0x5A),
    "\\langle": ("cmex10", 0xAD),
    "\\leftangle": ("cmex10", 0xAD),
    "\\leftbrace": ("cmex10", 0xA9),
    "\\oint": ("cmex10", 0x49),
    "\\prod": ("cmex10", 0x59),
    "\\rangle": ("cmex10", 0xAE),
    "\\rightangle": ("cmex10", 0xAE),
    "\\rightbrace": ("cmex10", 0xAA),
    "\\sum": ("cmex10", 0x58),
    "\\widehat": ("cmex10", 0x62),
    "\\widetilde": ("cmex10", 0x65),
    "\\{": ("cmex10", 0xA9),
    "\\}": ("cmex10", 0xAA),
    "{": ("cmex10", 0xA9),
    "}": ("cmex10", 0xAA),
    ",": ("cmmi10", 0x3B),
    ".": ("cmmi10", 0x3A),
    "/": ("cmmi10", 0x3D),
    "<": ("cmmi10", 0x3C),
    ">": ("cmmi10", 0x3E),
    "\\alpha": ("cmmi10", 0xAE),
    "\\beta": ("cmmi10", 0xAF),
    "\\chi": ("cmmi10", 0xC2),
    "\\combiningrightarrowabove": ("cmmi10", 0x7E),
    "\\delta": ("cmmi10", 0xB1),
    "\\ell": ("cmmi10", 0x60),
    "\\epsilon": ("cmmi10", 0xB2),
    "\\eta": ("cmmi10", 0xB4),
    "\\flat": ("cmmi10", 0x5B),
    "\\frown": ("cmmi10", 0x5F),
    "\\gamma": ("cmmi10", 0xB0),
    "\\imath": ("cmmi10", 0x7B),
    "\\iota": ("cmmi10", 0xB6),
    "\\jmath": ("cmmi10", 0x7C),
    "\\kappa": ("cmmi10", 0x2219),
    "\\lambda": ("cmmi10", 0xB8),
    "\\leftharpoondown": ("cmmi10", 0x29),
    "\\leftharpoonup": ("cmmi10", 0x28),
    "\\mu": ("cmmi10", 0xB9),
    "\\natural": ("cmmi10", 0x5C),
    "\\nu": ("cmmi10", 0xBA),
    "\\omega": ("cmmi10", 0x21),
    "\\phi": ("cmmi10", 0xC1),
    "\\pi": ("cmmi10", 0xBC),
    "\\psi": ("cmmi10", 0xC3),
    "\\rho": ("cmmi10", 0xBD),
    "\\rightharpoondown": ("cmmi10", 0x2B),
    "\\rightharpoonup": ("cmmi10", 0x2A),
    "\\sharp": ("cmmi10", 0x5D),
    "\\sigma": ("cmmi10", 0xBE),
    "\\smile": ("cmmi10", 0x5E),
    "\\tau": ("cmmi10", 0xBF),
    "\\theta": ("cmmi10", 0xB5),
    "\\triangleleft": ("cmmi10", 0x2F),
    "\\triangleright": ("cmmi10", 0x2E),
    "\\upsilon": ("cmmi10", 0xC0),
    "\\varepsilon": ("cmmi10", 0x22),
    "\\varphi": ("cmmi10", 0x27),
    "\\varrho": ("cmmi10", 0x25),
    "\\varsigma": ("cmmi10", 0x26),
    "\\vartheta": ("cmmi10", 0x23),
    "\\wp": ("cmmi10", 0x7D),
    "\\xi": ("cmmi10", 0xBB),
    "\\zeta": ("cmmi10", 0xB3),
    "!": ("cmr10", 0x21),
    "%": ("cmr10", 0x25),
    "&": ("cmr10", 0x26),
    "(": ("cmr10", 0x28),
    ")": ("cmr10", 0x29),
    "+": ("cmr10", 0x2B),
    "0": ("cmr10", 0x30),
    "1": ("cmr10", 0x31),
    "2": ("cmr10", 0x32),
    "3": ("cmr10", 0x33),
    "4": ("cmr10", 0x34),
    "5": ("cmr10", 0x35),
    "6": ("cmr10", 0x36),
    "7": ("cmr10", 0x37),
    "8": ("cmr10", 0x38),
    "9": ("cmr10", 0x39),
    ":": ("cmr10", 0x3A),
    ";": ("cmr10", 0x3B),
    "=": ("cmr10", 0x3D),
    "?": ("cmr10", 0x3F),
    "@": ("cmr10", 0x40),
    "[": ("cmr10", 0x5B),
    "\\#": ("cmr10", 0x23),
    "\\$": ("cmr10", 0x24),
    "\\%": ("cmr10", 0x25),
    "\\Delta": ("cmr10", 0xA2),
    "\\Gamma": ("cmr10", 0xA1),
    "\\Lambda": ("cmr10", 0xA4),
    "\\Omega": ("cmr10", 0xAD),
    "\\Phi": ("cmr10", 0xA9),
    "\\Pi": ("cmr10", 0xA6),
    "\\Psi": ("cmr10", 0xAA),
    "\\Sigma": ("cmr10", 0xA7),
    "\\Theta": ("cmr10", 0xA3),
    "\\Upsilon": ("cmr10", 0xA8),
    "\\Xi": ("cmr10", 0xA5),
    "\\circumflexaccent": ("cmr10", 0x5E),
    "\\combiningacuteaccent": ("cmr10", 0xB6),
    "\\combiningbreve": ("cmr10", 0xB8),
    "\\combiningdiaeresis": ("cmr10", 0xC4),
    "\\combiningdotabove": ("cmr10", 0x5F),
    "\\combininggraveaccent": ("cmr10", 0xB5),
    "\\combiningoverline": ("cmr10", 0xB9),
    "\\combiningtilde": ("cmr10", 0x7E),
    "\\leftbracket": ("cmr10", 0x5B),
    "\\leftparen": ("cmr10", 0x28),
    "\\rightbracket": ("cmr10", 0x5D),
    "\\rightparen": ("cmr10", 0x29),
    "\\widebar": ("cmr10", 0xB9),
    "]": ("cmr10", 0x5D),
    "*": ("cmsy10", 0xA4),
    "\N{MINUS SIGN}": ("cmsy10", 0xA1),
    "\\Downarrow": ("cmsy10", 0x2B),
    "\\Im": ("cmsy10", 0x3D),
    "\\Leftarrow": ("cmsy10", 0x28),
    "\\Leftrightarrow": ("cmsy10", 0x2C),
    "\\P": ("cmsy10", 0x7B),
    "\\Re": ("cmsy10", 0x3C),
    "\\Rightarrow": ("cmsy10", 0x29),
    "\\S": ("cmsy10", 0x78),
    "\\Uparrow": ("cmsy10", 0x2A),
    "\\Updownarrow": ("cmsy10", 0x6D),
    "\\Vert": ("cmsy10", 0x6B),
    "\\aleph": ("cmsy10", 0x40),
    "\\approx": ("cmsy10", 0xBC),
    "\\ast": ("cmsy10", 0xA4),
    "\\asymp": ("cmsy10", 0xB3),
    "\\backslash": ("cmsy10", 0x6E),
    "\\bigcirc": ("cmsy10", 0xB0),
    "\\bigtriangledown": ("cmsy10", 0x35),
    "\\bigtriangleup": ("cmsy10", 0x34),
    "\\bot": ("cmsy10", 0x3F),
    "\\bullet": ("cmsy10", 0xB2),
    "\\cap": ("cmsy10", 0x5C),
    "\\cdot": ("cmsy10", 0xA2),
    "\\circ": ("cmsy10", 0xB1),
    "\\clubsuit": ("cmsy10", 0x7C),
    "\\cup": ("cmsy10", 0x5B),
    "\\dag": ("cmsy10", 0x79),
    "\\dashv": ("cmsy10", 0x61),
    "\\ddag": ("cmsy10", 0x7A),
    "\\diamond": ("cmsy10", 0xA6),
    "\\diamondsuit": ("cmsy10", 0x7D),
    "\\div": ("cmsy10", 0xA5),
    "\\downarrow": ("cmsy10", 0x23),
    "\\emptyset": ("cmsy10", 0x3B),
    "\\equiv": ("cmsy10", 0xB4),
    "\\exists": ("cmsy10", 0x39),
    "\\forall": ("cmsy10", 0x38),
    "\\geq": ("cmsy10", 0xB8),
    "\\gg": ("cmsy10", 0xC0),
    "\\heartsuit": ("cmsy10", 0x7E),
    "\\in": ("cmsy10", 0x32),
    "\\infty": ("cmsy10", 0x31),
    "\\lbrace": ("cmsy10", 0x66),
    "\\lceil": ("cmsy10", 0x64),
    "\\leftarrow": ("cmsy10", 0xC3),
    "\\leftrightarrow": ("cmsy10", 0x24),
    "\\leq": ("cmsy10", 0x2219),
    "\\lfloor": ("cmsy10", 0x62),
    "\\ll": ("cmsy10", 0xBF),
    "\\mid": ("cmsy10", 0x6A),
    "\\mp": ("cmsy10", 0xA8),
    "\\nabla": ("cmsy10", 0x72),
    "\\nearrow": ("cmsy10", 0x25),
    "\\neg": ("cmsy10", 0x3A),
    "\\ni": ("cmsy10", 0x33),
    "\\nwarrow": ("cmsy10", 0x2D),
    "\\odot": ("cmsy10", 0xAF),
    "\\ominus": ("cmsy10", 0xAA),
    "\\oplus": ("cmsy10", 0xA9),
    "\\oslash": ("cmsy10", 0xAE),
    "\\otimes": ("cmsy10", 0xAD),
    "\\pm": ("cmsy10", 0xA7),
    "\\prec": ("cmsy10", 0xC1),
    "\\preceq": ("cmsy10", 0xB9),
    "\\prime": ("cmsy10", 0x30),
    "\\propto": ("cmsy10", 0x2F),
    "\\rbrace": ("cmsy10", 0x67),
    "\\rceil": ("cmsy10", 0x65),
    "\\rfloor": ("cmsy10", 0x63),
    "\\rightarrow": ("cmsy10", 0x21),
    "\\searrow": ("cmsy10", 0x26),
    "\\sim": ("cmsy10", 0xBB),
    "\\simeq": ("cmsy10", 0x27),
    "\\slash": ("cmsy10", 0x36),
    "\\spadesuit": ("cmsy10", 0xC4),
    "\\sqcap": ("cmsy10", 0x75),
    "\\sqcup": ("cmsy10", 0x74),
    "\\sqsubseteq": ("cmsy10", 0x76),
    "\\sqsupseteq": ("cmsy10", 0x77),
    "\\subset": ("cmsy10", 0xBD),
    "\\subseteq": ("cmsy10", 0xB5),
    "\\succ": ("cmsy10", 0xC2),
    "\\succeq": ("cmsy10", 0xBA),
    "\\supset": ("cmsy10", 0xBE),
    "\\supseteq": ("cmsy10", 0xB6),
    "\\swarrow": ("cmsy10", 0x2E),
    "\\times": ("cmsy10", 0xA3),
    "\\to": ("cmsy10", 0x21),
    "\\top": ("cmsy10", 0x3E),
    "\\uparrow": ("cmsy10", 0x22),
    "\\updownarrow": ("cmsy10", 0x6C),
    "\\uplus": ("cmsy10", 0x5D),
    "\\vdash": ("cmsy10", 0x60),
    "\\vee": ("cmsy10", 0x5F),
    "\\vert": ("cmsy10", 0x6A),
    "\\wedge": ("cmsy10", 0x5E),
    "\\wr": ("cmsy10", 0x6F),
    "\\|": ("cmsy10", 0x6B),
    "|": ("cmsy10", 0x6A),
    "\\_": ("cmtt10", 0x5F),
}

# Automatically generated.

type12uni = {
    "aring": 229,
    "quotedblright": 8221,
    "V": 86,
    "dollar": 36,
    "four": 52,
    "Yacute": 221,
    "P": 80,
    "underscore": 95,
    "p": 112,
    "Otilde": 213,
    "perthousand": 8240,
    "zero": 48,
    "dotlessi": 305,
    "Scaron": 352,
    "zcaron": 382,
    "egrave": 232,
    "section": 167,
    "Icircumflex": 206,
    "ntilde": 241,
    "ampersand": 38,
    "dotaccent": 729,
    "degree": 176,
    "K": 75,
    "acircumflex": 226,
    "Aring": 197,
    "k": 107,
    "smalltilde": 732,
    "Agrave": 192,
    "divide": 247,
    "ocircumflex": 244,
    "asciitilde": 126,
    "two": 50,
    "E": 69,
    "scaron": 353,
    "F": 70,
    "bracketleft": 91,
    "asciicircum": 94,
    "f": 102,
    "ordmasculine": 186,
    "mu": 181,
    "paragraph": 182,
    "nine": 57,
    "v": 118,
    "guilsinglleft": 8249,
    "backslash": 92,
    "six": 54,
    "A": 65,
    "icircumflex": 238,
    "a": 97,
    "ogonek": 731,
    "q": 113,
    "oacute": 243,
    "ograve": 242,
    "edieresis": 235,
    "comma": 44,
    "otilde": 245,
    "guillemotright": 187,
    "ecircumflex": 234,
    "greater": 62,
    "uacute": 250,
    "L": 76,
    "bullet": 8226,
    "cedilla": 184,
    "ydieresis": 255,
    "l": 108,
    "logicalnot": 172,
    "exclamdown": 161,
    "endash": 8211,
    "agrave": 224,
    "Adieresis": 196,
    "germandbls": 223,
    "Odieresis": 214,
    "space": 32,
    "quoteright": 8217,
    "ucircumflex": 251,
    "G": 71,
    "quoteleft": 8216,
    "W": 87,
    "Q": 81,
    "g": 103,
    "w": 119,
    "question": 63,
    "one": 49,
    "ring": 730,
    "figuredash": 8210,
    "B": 66,
    "iacute": 237,
    "Ydieresis": 376,
    "R": 82,
    "b": 98,
    "r": 114,
    "Ccedilla": 199,
    "minus": 8722,
    "Lslash": 321,
    "Uacute": 218,
    "yacute": 253,
    "Ucircumflex": 219,
    "quotedbl": 34,
    "onehalf": 189,
    "Thorn": 222,
    "M": 77,
    "eight": 56,
    "multiply": 215,
    "grave": 96,
    "Ocircumflex": 212,
    "m": 109,
    "Ugrave": 217,
    "guilsinglright": 8250,
    "Ntilde": 209,
    "questiondown": 191,
    "Atilde": 195,
    "ccedilla": 231,
    "Z": 90,
    "copyright": 169,
    "yen": 165,
    "Eacute": 201,
    "H": 72,
    "X": 88,
    "Idieresis": 207,
    "bar": 124,
    "h": 104,
    "x": 120,
    "udieresis": 252,
    "ordfeminine": 170,
    "braceleft": 123,
    "macron": 175,
    "atilde": 227,
    "Acircumflex": 194,
    "Oslash": 216,
    "C": 67,
    "quotedblleft": 8220,
    "S": 83,
    "exclam": 33,
    "Zcaron": 381,
    "equal": 61,
    "s": 115,
    "eth": 240,
    "Egrave": 200,
    "hyphen": 45,
    "period": 46,
    "igrave": 236,
    "colon": 58,
    "Ecircumflex": 202,
    "trademark": 8482,
    "Aacute": 193,
    "cent": 162,
    "lslash": 322,
    "c": 99,
    "N": 78,
    "breve": 728,
    "Oacute": 211,
    "guillemotleft": 171,
    "n": 110,
    "idieresis": 239,
    "braceright": 125,
    "seven": 55,
    "brokenbar": 166,
    "ugrave": 249,
    "periodcentered": 183,
    "sterling": 163,
    "I": 73,
    "Y": 89,
    "Eth": 208,
    "emdash": 8212,
    "i": 105,
    "daggerdbl": 8225,
    "y": 121,
    "plusminus": 177,
    "less": 60,
    "Udieresis": 220,
    "D": 68,
    "five": 53,
    "T": 84,
    "oslash": 248,
    "acute": 180,
    "d": 100,
    "OE": 338,
    "Igrave": 204,
    "t": 116,
    "parenright": 41,
    "adieresis": 228,
    "quotesingle": 39,
    "twodotenleader": 8229,
    "slash": 47,
    "ellipsis": 8230,
    "numbersign": 35,
    "odieresis": 246,
    "O": 79,
    "oe": 339,
    "o": 111,
    "Edieresis": 203,
    "plus": 43,
    "dagger": 8224,
    "three": 51,
    "hungarumlaut": 733,
    "parenleft": 40,
    "fraction": 8260,
    "registered": 174,
    "J": 74,
    "dieresis": 168,
    "Ograve": 210,
    "j": 106,
    "z": 122,
    "ae": 230,
    "semicolon": 59,
    "at": 64,
    "Iacute": 205,
    "percent": 37,
    "bracketright": 93,
    "AE": 198,
    "asterisk": 42,
    "aacute": 225,
    "U": 85,
    "eacute": 233,
    "e": 101,
    "thorn": 254,
    "u": 117,
}

uni2type1 = {v: k for k, v in type12uni.items()}

#  The script below is to sort and format the tex2uni dict

## For decimal values: int(hex(v), 16)
#  newtex = {k: hex(v) for k, v in tex2uni.items()}
#  sd = dict(sorted(newtex.items(), key=lambda item: item[0]))
#
## For formatting the sorted dictionary with proper spacing
## the value '24' comes from finding the longest string in
## the newtex keys with len(max(newtex, key=len))
#  for key in sd:
#      print("{0:24} : {1: <s},".format("'" + key + "'", sd[key]))

tex2uni = {
    "#": 0x23,
    "$": 0x24,
    "%": 0x25,
    "AA": 0xC5,
    "AE": 0xC6,
    "BbbC": 0x2102,
    "BbbN": 0x2115,
    "BbbP": 0x2119,
    "BbbQ": 0x211A,
    "BbbR": 0x211D,
    "BbbZ": 0x2124,
    "Bumpeq": 0x224E,
    "Cap": 0x22D2,
    "Colon": 0x2237,
    "Cup": 0x22D3,
    "DH": 0xD0,
    "Delta": 0x394,
    "Doteq": 0x2251,
    "Downarrow": 0x21D3,
    "Equiv": 0x2263,
    "Finv": 0x2132,
    "Game": 0x2141,
    "Gamma": 0x393,
    "H": 0x30B,
    "Im": 0x2111,
    "Join": 0x2A1D,
    "L": 0x141,
    "Lambda": 0x39B,
    "Ldsh": 0x21B2,
    "Leftarrow": 0x21D0,
    "Leftrightarrow": 0x21D4,
    "Lleftarrow": 0x21DA,
    "Longleftarrow": 0x27F8,
    "Longleftrightarrow": 0x27FA,
    "Longrightarrow": 0x27F9,
    "Lsh": 0x21B0,
    "Nearrow": 0x21D7,
    "Nwarrow": 0x21D6,
    "O": 0xD8,
    "OE": 0x152,
    "Omega": 0x3A9,
    "P": 0xB6,
    "Phi": 0x3A6,
    "Pi": 0x3A0,
    "Psi": 0x3A8,
    "QED": 0x220E,
    "Rdsh": 0x21B3,
    "Re": 0x211C,
    "Rightarrow": 0x21D2,
    "Rrightarrow": 0x21DB,
    "Rsh": 0x21B1,
    "S": 0xA7,
    "Searrow": 0x21D8,
    "Sigma": 0x3A3,
    "Subset": 0x22D0,
    "Supset": 0x22D1,
    "Swarrow": 0x21D9,
    "Theta": 0x398,
    "Thorn": 0xDE,
    "Uparrow": 0x21D1,
    "Updownarrow": 0x21D5,
    "Upsilon": 0x3A5,
    "Vdash": 0x22A9,
    "Vert": 0x2016,
    "Vvdash": 0x22AA,
    "Xi": 0x39E,
    "_": 0x5F,
    "__sqrt__": 0x221A,
    "aa": 0xE5,
    "ac": 0x223E,
    "acute": 0x301,
    "acwopencirclearrow": 0x21BA,
    "adots": 0x22F0,
    "ae": 0xE6,
    "aleph": 0x2135,
    "alpha": 0x3B1,
    "amalg": 0x2A3F,
    "angle": 0x2220,
    "approx": 0x2248,
    "approxeq": 0x224A,
    "approxident": 0x224B,
    "arceq": 0x2258,
    "ast": 0x2217,
    "asterisk": 0x2A,
    "asymp": 0x224D,
    "backcong": 0x224C,
    "backepsilon": 0x3F6,
    "backprime": 0x2035,
    "backsim": 0x223D,
    "backsimeq": 0x22CD,
    "backslash": 0x5C,
    "bagmember": 0x22FF,
    "bar": 0x304,
    "barleftarrow": 0x21E4,
    "barvee": 0x22BD,
    "barwedge": 0x22BC,
    "because": 0x2235,
    "beta": 0x3B2,
    "beth": 0x2136,
    "between": 0x226C,
    "bigcap": 0x22C2,
    "bigcirc": 0x25CB,
    "bigcup": 0x22C3,
    "bigodot": 0x2A00,
    "bigoplus": 0x2A01,
    "bigotimes": 0x2A02,
    "bigsqcup": 0x2A06,
    "bigstar": 0x2605,
    "bigtriangledown": 0x25BD,
    "bigtriangleup": 0x25B3,
    "biguplus": 0x2A04,
    "bigvee": 0x22C1,
    "bigwedge": 0x22C0,
    "blacksquare": 0x25A0,
    "blacktriangle": 0x25B4,
    "blacktriangledown": 0x25BE,
    "blacktriangleleft": 0x25C0,
    "blacktriangleright": 0x25B6,
    "bot": 0x22A5,
    "bowtie": 0x22C8,
    "boxbar": 0x25EB,
    "boxdot": 0x22A1,
    "boxminus": 0x229F,
    "boxplus": 0x229E,
    "boxtimes": 0x22A0,
    "breve": 0x306,
    "bullet": 0x2219,
    "bumpeq": 0x224F,
    "c": 0x327,
    "candra": 0x310,
    "cap": 0x2229,
    "carriagereturn": 0x21B5,
    "cdot": 0x22C5,
    "cdotp": 0xB7,
    "cdots": 0x22EF,
    "cent": 0xA2,
    "check": 0x30C,
    "checkmark": 0x2713,
    "chi": 0x3C7,
    "circ": 0x2218,
    "circeq": 0x2257,
    "circlearrowleft": 0x21BA,
    "circlearrowright": 0x21BB,
    "circledR": 0xAE,
    "circledS": 0x24C8,
    "circledast": 0x229B,
    "circledcirc": 0x229A,
    "circleddash": 0x229D,
    "circumflexaccent": 0x302,
    "clubsuit": 0x2663,
    "clubsuitopen": 0x2667,
    "colon": 0x3A,
    "coloneq": 0x2254,
    "combiningacuteaccent": 0x301,
    "combiningbreve": 0x306,
    "combiningdiaeresis": 0x308,
    "combiningdotabove": 0x307,
    "combiningfourdotsabove": 0x20DC,
    "combininggraveaccent": 0x300,
    "combiningoverline": 0x304,
    "combiningrightarrowabove": 0x20D7,
    "combiningthreedotsabove": 0x20DB,
    "combiningtilde": 0x303,
    "complement": 0x2201,
    "cong": 0x2245,
    "coprod": 0x2210,
    "copyright": 0xA9,
    "cup": 0x222A,
    "cupdot": 0x228D,
    "cupleftarrow": 0x228C,
    "curlyeqprec": 0x22DE,
    "curlyeqsucc": 0x22DF,
    "curlyvee": 0x22CE,
    "curlywedge": 0x22CF,
    "curvearrowleft": 0x21B6,
    "curvearrowright": 0x21B7,
    "cwopencirclearrow": 0x21BB,
    "d": 0x323,
    "dag": 0x2020,
    "dagger": 0x2020,
    "daleth": 0x2138,
    "danger": 0x2621,
    "dashleftarrow": 0x290E,
    "dashrightarrow": 0x290F,
    "dashv": 0x22A3,
    "ddag": 0x2021,
    "ddagger": 0x2021,
    "ddddot": 0x20DC,
    "dddot": 0x20DB,
    "ddot": 0x308,
    "ddots": 0x22F1,
    "degree": 0xB0,
    "delta": 0x3B4,
    "dh": 0xF0,
    "diamond": 0x22C4,
    "diamondsuit": 0x2662,
    "digamma": 0x3DD,
    "disin": 0x22F2,
    "div": 0xF7,
    "divideontimes": 0x22C7,
    "dot": 0x307,
    "doteq": 0x2250,
    "doteqdot": 0x2251,
    "dotminus": 0x2238,
    "dotplus": 0x2214,
    "dots": 0x2026,
    "dotsminusdots": 0x223A,
    "doublebarwedge": 0x2306,
    "downarrow": 0x2193,
    "downdownarrows": 0x21CA,
    "downharpoonleft": 0x21C3,
    "downharpoonright": 0x21C2,
    "downzigzagarrow": 0x21AF,
    "ell": 0x2113,
    "emdash": 0x2014,
    "emptyset": 0x2205,
    "endash": 0x2013,
    "epsilon": 0x3B5,
    "eqcirc": 0x2256,
    "eqcolon": 0x2255,
    "eqdef": 0x225D,
    "eqgtr": 0x22DD,
    "eqless": 0x22DC,
    "eqsim": 0x2242,
    "eqslantgtr": 0x2A96,
    "eqslantless": 0x2A95,
    "equal": 0x3D,
    "equalparallel": 0x22D5,
    "equiv": 0x2261,
    "eta": 0x3B7,
    "eth": 0xF0,
    "exists": 0x2203,
    "fallingdotseq": 0x2252,
    "flat": 0x266D,
    "forall": 0x2200,
    "frakC": 0x212D,
    "frakZ": 0x2128,
    "frown": 0x2322,
    "gamma": 0x3B3,
    "geq": 0x2265,
    "geqq": 0x2267,
    "geqslant": 0x2A7E,
    "gg": 0x226B,
    "ggg": 0x22D9,
    "gimel": 0x2137,
    "gnapprox": 0x2A8A,
    "gneqq": 0x2269,
    "gnsim": 0x22E7,
    "grave": 0x300,
    "greater": 0x3E,
    "gtrapprox": 0x2A86,
    "gtrdot": 0x22D7,
    "gtreqless": 0x22DB,
    "gtreqqless": 0x2A8C,
    "gtrless": 0x2277,
    "gtrsim": 0x2273,
    "guillemotleft": 0xAB,
    "guillemotright": 0xBB,
    "guilsinglleft": 0x2039,
    "guilsinglright": 0x203A,
    "hat": 0x302,
    "hbar": 0x127,
    "heartsuit": 0x2661,
    "hermitmatrix": 0x22B9,
    "hookleftarrow": 0x21A9,
    "hookrightarrow": 0x21AA,
    "hslash": 0x210F,
    "i": 0x131,
    "iiiint": 0x2A0C,
    "iiint": 0x222D,
    "iint": 0x222C,
    "imageof": 0x22B7,
    "imath": 0x131,
    "in": 0x2208,
    "increment": 0x2206,
    "infty": 0x221E,
    "int": 0x222B,
    "intercal": 0x22BA,
    "invnot": 0x2310,
    "iota": 0x3B9,
    "isinE": 0x22F9,
    "isindot": 0x22F5,
    "isinobar": 0x22F7,
    "isins": 0x22F4,
    "isinvb": 0x22F8,
    "jmath": 0x237,
    "k": 0x328,
    "kappa": 0x3BA,
    "kernelcontraction": 0x223B,
    "l": 0x142,
    "lambda": 0x3BB,
    "lambdabar": 0x19B,
    "langle": 0x27E8,
    "lasp": 0x2BD,
    "lbrace": 0x7B,
    "lbrack": 0x5B,
    "lceil": 0x2308,
    "ldots": 0x2026,
    "leadsto": 0x21DD,
    "leftarrow": 0x2190,
    "leftarrowtail": 0x21A2,
    "leftbrace": 0x7B,
    "leftharpoonaccent": 0x20D0,
    "leftharpoondown": 0x21BD,
    "leftharpoonup": 0x21BC,
    "leftleftarrows": 0x21C7,
    "leftparen": 0x28,
    "leftrightarrow": 0x2194,
    "leftrightarrows": 0x21C6,
    "leftrightharpoons": 0x21CB,
    "leftrightsquigarrow": 0x21AD,
    "leftsquigarrow": 0x219C,
    "leftthreetimes": 0x22CB,
    "leq": 0x2264,
    "leqq": 0x2266,
    "leqslant": 0x2A7D,
    "less": 0x3C,
    "lessapprox": 0x2A85,
    "lessdot": 0x22D6,
    "lesseqgtr": 0x22DA,
    "lesseqqgtr": 0x2A8B,
    "lessgtr": 0x2276,
    "lesssim": 0x2272,
    "lfloor": 0x230A,
    "lgroup": 0x27EE,
    "lhd": 0x25C1,
    "ll": 0x226A,
    "llcorner": 0x231E,
    "lll": 0x22D8,
    "lnapprox": 0x2A89,
    "lneqq": 0x2268,
    "lnsim": 0x22E6,
    "longleftarrow": 0x27F5,
    "longleftrightarrow": 0x27F7,
    "longmapsto": 0x27FC,
    "longrightarrow": 0x27F6,
    "looparrowleft": 0x21AB,
    "looparrowright": 0x21AC,
    "lq": 0x2018,
    "lrcorner": 0x231F,
    "ltimes": 0x22C9,
    "macron": 0xAF,
    "maltese": 0x2720,
    "mapsdown": 0x21A7,
    "mapsfrom": 0x21A4,
    "mapsto": 0x21A6,
    "mapsup": 0x21A5,
    "measeq": 0x225E,
    "measuredangle": 0x2221,
    "measuredrightangle": 0x22BE,
    "merge": 0x2A55,
    "mho": 0x2127,
    "mid": 0x2223,
    "minus": 0x2212,
    "minuscolon": 0x2239,
    "models": 0x22A7,
    "mp": 0x2213,
    "mu": 0x3BC,
    "multimap": 0x22B8,
    "nLeftarrow": 0x21CD,
    "nLeftrightarrow": 0x21CE,
    "nRightarrow": 0x21CF,
    "nVDash": 0x22AF,
    "nVdash": 0x22AE,
    "nabla": 0x2207,
    "napprox": 0x2249,
    "natural": 0x266E,
    "ncong": 0x2247,
    "ne": 0x2260,
    "nearrow": 0x2197,
    "neg": 0xAC,
    "neq": 0x2260,
    "nequiv": 0x2262,
    "nexists": 0x2204,
    "ngeq": 0x2271,
    "ngtr": 0x226F,
    "ngtrless": 0x2279,
    "ngtrsim": 0x2275,
    "ni": 0x220B,
    "niobar": 0x22FE,
    "nis": 0x22FC,
    "nisd": 0x22FA,
    "nleftarrow": 0x219A,
    "nleftrightarrow": 0x21AE,
    "nleq": 0x2270,
    "nless": 0x226E,
    "nlessgtr": 0x2278,
    "nlesssim": 0x2274,
    "nmid": 0x2224,
    "not": 0x338,
    "notin": 0x2209,
    "notsmallowns": 0x220C,
    "nparallel": 0x2226,
    "nprec": 0x2280,
    "npreccurlyeq": 0x22E0,
    "nrightarrow": 0x219B,
    "nsim": 0x2241,
    "nsimeq": 0x2244,
    "nsqsubseteq": 0x22E2,
    "nsqsupseteq": 0x22E3,
    "nsubset": 0x2284,
    "nsubseteq": 0x2288,
    "nsucc": 0x2281,
    "nsucccurlyeq": 0x22E1,
    "nsupset": 0x2285,
    "nsupseteq": 0x2289,
    "ntriangleleft": 0x22EA,
    "ntrianglelefteq": 0x22EC,
    "ntriangleright": 0x22EB,
    "ntrianglerighteq": 0x22ED,
    "nu": 0x3BD,
    "nvDash": 0x22AD,
    "nvdash": 0x22AC,
    "nwarrow": 0x2196,
    "o": 0xF8,
    "obar": 0x233D,
    "ocirc": 0x30A,
    "odot": 0x2299,
    "oe": 0x153,
    "oequal": 0x229C,
    "oiiint": 0x2230,
    "oiint": 0x222F,
    "oint": 0x222E,
    "omega": 0x3C9,
    "ominus": 0x2296,
    "oplus": 0x2295,
    "origof": 0x22B6,
    "oslash": 0x2298,
    "otimes": 0x2297,
    "overarc": 0x311,
    "overleftarrow": 0x20D6,
    "overleftrightarrow": 0x20E1,
    "parallel": 0x2225,
    "partial": 0x2202,
    "perp": 0x27C2,
    "perthousand": 0x2030,
    "phi": 0x3D5,
    "pi": 0x3C0,
    "pitchfork": 0x22D4,
    "plus": 0x2B,
    "pm": 0xB1,
    "prec": 0x227A,
    "precapprox": 0x2AB7,
    "preccurlyeq": 0x227C,
    "preceq": 0x227C,
    "precnapprox": 0x2AB9,
    "precnsim": 0x22E8,
    "precsim": 0x227E,
    "prime": 0x2032,
    "prod": 0x220F,
    "propto": 0x221D,
    "prurel": 0x22B0,
    "psi": 0x3C8,
    "quad": 0x2003,
    "questeq": 0x225F,
    "rangle": 0x27E9,
    "rasp": 0x2BC,
    "ratio": 0x2236,
    "rbrace": 0x7D,
    "rbrack": 0x5D,
    "rceil": 0x2309,
    "rfloor": 0x230B,
    "rgroup": 0x27EF,
    "rhd": 0x25B7,
    "rho": 0x3C1,
    "rightModels": 0x22AB,
    "rightangle": 0x221F,
    "rightarrow": 0x2192,
    "rightarrowbar": 0x21E5,
    "rightarrowtail": 0x21A3,
    "rightassert": 0x22A6,
    "rightbrace": 0x7D,
    "rightharpoonaccent": 0x20D1,
    "rightharpoondown": 0x21C1,
    "rightharpoonup": 0x21C0,
    "rightleftarrows": 0x21C4,
    "rightleftharpoons": 0x21CC,
    "rightparen": 0x29,
    "rightrightarrows": 0x21C9,
    "rightsquigarrow": 0x219D,
    "rightthreetimes": 0x22CC,
    "rightzigzagarrow": 0x21DD,
    "ring": 0x2DA,
    "risingdotseq": 0x2253,
    "rq": 0x2019,
    "rtimes": 0x22CA,
    "scrB": 0x212C,
    "scrE": 0x2130,
    "scrF": 0x2131,
    "scrH": 0x210B,
    "scrI": 0x2110,
    "scrL": 0x2112,
    "scrM": 0x2133,
    "scrR": 0x211B,
    "scre": 0x212F,
    "scrg": 0x210A,
    "scro": 0x2134,
    "scurel": 0x22B1,
    "searrow": 0x2198,
    "setminus": 0x2216,
    "sharp": 0x266F,
    "sigma": 0x3C3,
    "sim": 0x223C,
    "simeq": 0x2243,
    "simneqq": 0x2246,
    "sinewave": 0x223F,
    "slash": 0x2215,
    "smallin": 0x220A,
    "smallintclockwise": 0x2231,
    "smallointctrcclockwise": 0x2233,
    "smallowns": 0x220D,
    "smallsetminus": 0x2216,
    "smallvarointclockwise": 0x2232,
    "smile": 0x2323,
    "solbar": 0x233F,
    "spadesuit": 0x2660,
    "spadesuitopen": 0x2664,
    "sphericalangle": 0x2222,
    "sqcap": 0x2293,
    "sqcup": 0x2294,
    "sqsubset": 0x228F,
    "sqsubseteq": 0x2291,
    "sqsubsetneq": 0x22E4,
    "sqsupset": 0x2290,
    "sqsupseteq": 0x2292,
    "sqsupsetneq": 0x22E5,
    "ss": 0xDF,
    "star": 0x22C6,
    "stareq": 0x225B,
    "sterling": 0xA3,
    "subset": 0x2282,
    "subseteq": 0x2286,
    "subseteqq": 0x2AC5,
    "subsetneq": 0x228A,
    "subsetneqq": 0x2ACB,
    "succ": 0x227B,
    "succapprox": 0x2AB8,
    "succcurlyeq": 0x227D,
    "succeq": 0x227D,
    "succnapprox": 0x2ABA,
    "succnsim": 0x22E9,
    "succsim": 0x227F,
    "sum": 0x2211,
    "supset": 0x2283,
    "supseteq": 0x2287,
    "supseteqq": 0x2AC6,
    "supsetneq": 0x228B,
    "supsetneqq": 0x2ACC,
    "swarrow": 0x2199,
    "t": 0x361,
    "tau": 0x3C4,
    "textasciiacute": 0xB4,
    "textasciicircum": 0x5E,
    "textasciigrave": 0x60,
    "textasciitilde": 0x7E,
    "textexclamdown": 0xA1,
    "textquestiondown": 0xBF,
    "textquotedblleft": 0x201C,
    "textquotedblright": 0x201D,
    "therefore": 0x2234,
    "theta": 0x3B8,
    "thickspace": 0x2005,
    "thorn": 0xFE,
    "tilde": 0x303,
    "times": 0xD7,
    "to": 0x2192,
    "top": 0x22A4,
    "triangle": 0x25B3,
    "triangledown": 0x25BF,
    "triangleeq": 0x225C,
    "triangleleft": 0x25C1,
    "trianglelefteq": 0x22B4,
    "triangleq": 0x225C,
    "triangleright": 0x25B7,
    "trianglerighteq": 0x22B5,
    "turnednot": 0x2319,
    "twoheaddownarrow": 0x21A1,
    "twoheadleftarrow": 0x219E,
    "twoheadrightarrow": 0x21A0,
    "twoheaduparrow": 0x219F,
    "ulcorner": 0x231C,
    "underbar": 0x331,
    "unlhd": 0x22B4,
    "unrhd": 0x22B5,
    "uparrow": 0x2191,
    "updownarrow": 0x2195,
    "updownarrowbar": 0x21A8,
    "updownarrows": 0x21C5,
    "upharpoonleft": 0x21BF,
    "upharpoonright": 0x21BE,
    "uplus": 0x228E,
    "upsilon": 0x3C5,
    "upuparrows": 0x21C8,
    "urcorner": 0x231D,
    "vDash": 0x22A8,
    "varepsilon": 0x3B5,
    "varisinobar": 0x22F6,
    "varisins": 0x22F3,
    "varkappa": 0x3F0,
    "varlrtriangle": 0x22BF,
    "varniobar": 0x22FD,
    "varnis": 0x22FB,
    "varnothing": 0x2205,
    "varphi": 0x3C6,
    "varpi": 0x3D6,
    "varpropto": 0x221D,
    "varrho": 0x3F1,
    "varsigma": 0x3C2,
    "vartheta": 0x3D1,
    "vartriangle": 0x25B5,
    "vartriangleleft": 0x22B2,
    "vartriangleright": 0x22B3,
    "vdash": 0x22A2,
    "vdots": 0x22EE,
    "vec": 0x20D7,
    "vee": 0x2228,
    "veebar": 0x22BB,
    "veeeq": 0x225A,
    "vert": 0x7C,
    "wedge": 0x2227,
    "wedgeq": 0x2259,
    "widebar": 0x305,
    "widehat": 0x302,
    "widetilde": 0x303,
    "wp": 0x2118,
    "wr": 0x2240,
    "xi": 0x3BE,
    "yen": 0xA5,
    "zeta": 0x3B6,
    "{": 0x7B,
    "|": 0x2016,
    "}": 0x7D,
}

# Each element is a 4-tuple of the form:
#   src_start, src_end, dst_font, dst_start

_EntryTypeIn = tuple[str, str, str, str | int]
_EntryTypeOut = tuple[int, int, str, int]

_stix_virtual_fonts: dict[str, dict[str, list[_EntryTypeIn]] | list[_EntryTypeIn]] = {
    "bb": {
        "rm": [
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK DIGIT ZERO}",
            ),
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER B}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK CAPITAL A}",
            ),
            (
                "\N{LATIN CAPITAL LETTER C}",
                "\N{LATIN CAPITAL LETTER C}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL C}",
            ),
            (
                "\N{LATIN CAPITAL LETTER D}",
                "\N{LATIN CAPITAL LETTER G}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK CAPITAL D}",
            ),
            (
                "\N{LATIN CAPITAL LETTER H}",
                "\N{LATIN CAPITAL LETTER H}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL H}",
            ),
            (
                "\N{LATIN CAPITAL LETTER I}",
                "\N{LATIN CAPITAL LETTER M}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK CAPITAL I}",
            ),
            (
                "\N{LATIN CAPITAL LETTER N}",
                "\N{LATIN CAPITAL LETTER N}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL N}",
            ),
            (
                "\N{LATIN CAPITAL LETTER O}",
                "\N{LATIN CAPITAL LETTER O}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK CAPITAL O}",
            ),
            (
                "\N{LATIN CAPITAL LETTER P}",
                "\N{LATIN CAPITAL LETTER Q}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL P}",
            ),
            (
                "\N{LATIN CAPITAL LETTER R}",
                "\N{LATIN CAPITAL LETTER R}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL R}",
            ),
            (
                "\N{LATIN CAPITAL LETTER S}",
                "\N{LATIN CAPITAL LETTER Y}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK CAPITAL S}",
            ),
            (
                "\N{LATIN CAPITAL LETTER Z}",
                "\N{LATIN CAPITAL LETTER Z}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL Z}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK SMALL A}",
            ),
            (
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL GAMMA}",
            ),
            (
                "\N{GREEK CAPITAL LETTER PI}",
                "\N{GREEK CAPITAL LETTER PI}",
                "rm",
                "\N{DOUBLE-STRUCK CAPITAL PI}",
            ),
            (
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "rm",
                "\N{DOUBLE-STRUCK N-ARY SUMMATION}",
            ),
            (
                "\N{GREEK SMALL LETTER GAMMA}",
                "\N{GREEK SMALL LETTER GAMMA}",
                "rm",
                "\N{DOUBLE-STRUCK SMALL GAMMA}",
            ),
            (
                "\N{GREEK SMALL LETTER PI}",
                "\N{GREEK SMALL LETTER PI}",
                "rm",
                "\N{DOUBLE-STRUCK SMALL PI}",
            ),
        ],
        "it": [
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK DIGIT ZERO}",
            ),
            ("\N{LATIN CAPITAL LETTER A}", "\N{LATIN CAPITAL LETTER B}", "it", 0xE154),
            (
                "\N{LATIN CAPITAL LETTER C}",
                "\N{LATIN CAPITAL LETTER C}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL C}",
            ),
            (
                "\N{LATIN CAPITAL LETTER D}",
                "\N{LATIN CAPITAL LETTER D}",
                "it",
                "\N{DOUBLE-STRUCK ITALIC CAPITAL D}",
            ),
            ("\N{LATIN CAPITAL LETTER E}", "\N{LATIN CAPITAL LETTER G}", "it", 0xE156),
            (
                "\N{LATIN CAPITAL LETTER H}",
                "\N{LATIN CAPITAL LETTER H}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL H}",
            ),
            ("\N{LATIN CAPITAL LETTER I}", "\N{LATIN CAPITAL LETTER M}", "it", 0xE159),
            (
                "\N{LATIN CAPITAL LETTER N}",
                "\N{LATIN CAPITAL LETTER N}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL N}",
            ),
            ("\N{LATIN CAPITAL LETTER O}", "\N{LATIN CAPITAL LETTER O}", "it", 0xE15E),
            (
                "\N{LATIN CAPITAL LETTER P}",
                "\N{LATIN CAPITAL LETTER Q}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL P}",
            ),
            (
                "\N{LATIN CAPITAL LETTER R}",
                "\N{LATIN CAPITAL LETTER R}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL R}",
            ),
            ("\N{LATIN CAPITAL LETTER S}", "\N{LATIN CAPITAL LETTER Y}", "it", 0xE15F),
            (
                "\N{LATIN CAPITAL LETTER Z}",
                "\N{LATIN CAPITAL LETTER Z}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL Z}",
            ),
            ("\N{LATIN SMALL LETTER A}", "\N{LATIN SMALL LETTER C}", "it", 0xE166),
            (
                "\N{LATIN SMALL LETTER D}",
                "\N{LATIN SMALL LETTER E}",
                "it",
                "\N{DOUBLE-STRUCK ITALIC SMALL D}",
            ),
            ("\N{LATIN SMALL LETTER F}", "\N{LATIN SMALL LETTER H}", "it", 0xE169),
            (
                "\N{LATIN SMALL LETTER I}",
                "\N{LATIN SMALL LETTER J}",
                "it",
                "\N{DOUBLE-STRUCK ITALIC SMALL I}",
            ),
            ("\N{LATIN SMALL LETTER K}", "\N{LATIN SMALL LETTER Z}", "it", 0xE16C),
            (
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL GAMMA}",
            ),  # \Gamma (not in beta STIX fonts)
            (
                "\N{GREEK CAPITAL LETTER PI}",
                "\N{GREEK CAPITAL LETTER PI}",
                "it",
                "\N{DOUBLE-STRUCK CAPITAL PI}",
            ),
            (
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "it",
                "\N{DOUBLE-STRUCK N-ARY SUMMATION}",
            ),  # \Sigma (not in beta STIX fonts)
            (
                "\N{GREEK SMALL LETTER GAMMA}",
                "\N{GREEK SMALL LETTER GAMMA}",
                "it",
                "\N{DOUBLE-STRUCK SMALL GAMMA}",
            ),  # \gamma (not in beta STIX fonts)
            (
                "\N{GREEK SMALL LETTER PI}",
                "\N{GREEK SMALL LETTER PI}",
                "it",
                "\N{DOUBLE-STRUCK SMALL PI}",
            ),
        ],
        "bf": [
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "rm",
                "\N{MATHEMATICAL DOUBLE-STRUCK DIGIT ZERO}",
            ),
            ("\N{LATIN CAPITAL LETTER A}", "\N{LATIN CAPITAL LETTER B}", "bf", 0xE38A),
            (
                "\N{LATIN CAPITAL LETTER C}",
                "\N{LATIN CAPITAL LETTER C}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL C}",
            ),
            (
                "\N{LATIN CAPITAL LETTER D}",
                "\N{LATIN CAPITAL LETTER D}",
                "bf",
                "\N{DOUBLE-STRUCK ITALIC CAPITAL D}",
            ),
            ("\N{LATIN CAPITAL LETTER E}", "\N{LATIN CAPITAL LETTER G}", "bf", 0xE38D),
            (
                "\N{LATIN CAPITAL LETTER H}",
                "\N{LATIN CAPITAL LETTER H}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL H}",
            ),
            ("\N{LATIN CAPITAL LETTER I}", "\N{LATIN CAPITAL LETTER M}", "bf", 0xE390),
            (
                "\N{LATIN CAPITAL LETTER N}",
                "\N{LATIN CAPITAL LETTER N}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL N}",
            ),
            ("\N{LATIN CAPITAL LETTER O}", "\N{LATIN CAPITAL LETTER O}", "bf", 0xE395),
            (
                "\N{LATIN CAPITAL LETTER P}",
                "\N{LATIN CAPITAL LETTER Q}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL P}",
            ),
            (
                "\N{LATIN CAPITAL LETTER R}",
                "\N{LATIN CAPITAL LETTER R}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL R}",
            ),
            ("\N{LATIN CAPITAL LETTER S}", "\N{LATIN CAPITAL LETTER Y}", "bf", 0xE396),
            (
                "\N{LATIN CAPITAL LETTER Z}",
                "\N{LATIN CAPITAL LETTER Z}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL Z}",
            ),
            ("\N{LATIN SMALL LETTER A}", "\N{LATIN SMALL LETTER C}", "bf", 0xE39D),
            (
                "\N{LATIN SMALL LETTER D}",
                "\N{LATIN SMALL LETTER E}",
                "bf",
                "\N{DOUBLE-STRUCK ITALIC SMALL D}",
            ),
            ("\N{LATIN SMALL LETTER F}", "\N{LATIN SMALL LETTER H}", "bf", 0xE3A2),
            (
                "\N{LATIN SMALL LETTER I}",
                "\N{LATIN SMALL LETTER J}",
                "bf",
                "\N{DOUBLE-STRUCK ITALIC SMALL I}",
            ),
            ("\N{LATIN SMALL LETTER K}", "\N{LATIN SMALL LETTER Z}", "bf", 0xE3A7),
            (
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL GAMMA}",
            ),
            (
                "\N{GREEK CAPITAL LETTER PI}",
                "\N{GREEK CAPITAL LETTER PI}",
                "bf",
                "\N{DOUBLE-STRUCK CAPITAL PI}",
            ),
            (
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "\N{GREEK CAPITAL LETTER SIGMA}",
                "bf",
                "\N{DOUBLE-STRUCK N-ARY SUMMATION}",
            ),
            (
                "\N{GREEK SMALL LETTER GAMMA}",
                "\N{GREEK SMALL LETTER GAMMA}",
                "bf",
                "\N{DOUBLE-STRUCK SMALL GAMMA}",
            ),
            (
                "\N{GREEK SMALL LETTER PI}",
                "\N{GREEK SMALL LETTER PI}",
                "bf",
                "\N{DOUBLE-STRUCK SMALL PI}",
            ),
        ],
    },
    "cal": [
        ("\N{LATIN CAPITAL LETTER A}", "\N{LATIN CAPITAL LETTER Z}", "it", 0xE22D),
    ],
    "frak": {
        "rm": [
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER B}",
                "rm",
                "\N{MATHEMATICAL FRAKTUR CAPITAL A}",
            ),
            (
                "\N{LATIN CAPITAL LETTER C}",
                "\N{LATIN CAPITAL LETTER C}",
                "rm",
                "\N{BLACK-LETTER CAPITAL C}",
            ),
            (
                "\N{LATIN CAPITAL LETTER D}",
                "\N{LATIN CAPITAL LETTER G}",
                "rm",
                "\N{MATHEMATICAL FRAKTUR CAPITAL D}",
            ),
            (
                "\N{LATIN CAPITAL LETTER H}",
                "\N{LATIN CAPITAL LETTER H}",
                "rm",
                "\N{BLACK-LETTER CAPITAL H}",
            ),
            (
                "\N{LATIN CAPITAL LETTER I}",
                "\N{LATIN CAPITAL LETTER I}",
                "rm",
                "\N{BLACK-LETTER CAPITAL I}",
            ),
            (
                "\N{LATIN CAPITAL LETTER J}",
                "\N{LATIN CAPITAL LETTER Q}",
                "rm",
                "\N{MATHEMATICAL FRAKTUR CAPITAL J}",
            ),
            (
                "\N{LATIN CAPITAL LETTER R}",
                "\N{LATIN CAPITAL LETTER R}",
                "rm",
                "\N{BLACK-LETTER CAPITAL R}",
            ),
            (
                "\N{LATIN CAPITAL LETTER S}",
                "\N{LATIN CAPITAL LETTER Y}",
                "rm",
                "\N{MATHEMATICAL FRAKTUR CAPITAL S}",
            ),
            (
                "\N{LATIN CAPITAL LETTER Z}",
                "\N{LATIN CAPITAL LETTER Z}",
                "rm",
                "\N{BLACK-LETTER CAPITAL Z}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "rm",
                "\N{MATHEMATICAL FRAKTUR SMALL A}",
            ),
        ],
        "bf": [
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER Z}",
                "bf",
                "\N{MATHEMATICAL BOLD FRAKTUR CAPITAL A}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "bf",
                "\N{MATHEMATICAL BOLD FRAKTUR SMALL A}",
            ),
        ],
    },
    "scr": [
        (
            "\N{LATIN CAPITAL LETTER A}",
            "\N{LATIN CAPITAL LETTER A}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL A}",
        ),
        (
            "\N{LATIN CAPITAL LETTER B}",
            "\N{LATIN CAPITAL LETTER B}",
            "it",
            "\N{SCRIPT CAPITAL B}",
        ),
        (
            "\N{LATIN CAPITAL LETTER C}",
            "\N{LATIN CAPITAL LETTER D}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL C}",
        ),
        (
            "\N{LATIN CAPITAL LETTER E}",
            "\N{LATIN CAPITAL LETTER F}",
            "it",
            "\N{SCRIPT CAPITAL E}",
        ),
        (
            "\N{LATIN CAPITAL LETTER G}",
            "\N{LATIN CAPITAL LETTER G}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL G}",
        ),
        (
            "\N{LATIN CAPITAL LETTER H}",
            "\N{LATIN CAPITAL LETTER H}",
            "it",
            "\N{SCRIPT CAPITAL H}",
        ),
        (
            "\N{LATIN CAPITAL LETTER I}",
            "\N{LATIN CAPITAL LETTER I}",
            "it",
            "\N{SCRIPT CAPITAL I}",
        ),
        (
            "\N{LATIN CAPITAL LETTER J}",
            "\N{LATIN CAPITAL LETTER K}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL J}",
        ),
        (
            "\N{LATIN CAPITAL LETTER L}",
            "\N{LATIN CAPITAL LETTER L}",
            "it",
            "\N{SCRIPT CAPITAL L}",
        ),
        (
            "\N{LATIN CAPITAL LETTER M}",
            "\N{LATIN CAPITAL LETTER M}",
            "it",
            "\N{SCRIPT CAPITAL M}",
        ),
        (
            "\N{LATIN CAPITAL LETTER N}",
            "\N{LATIN CAPITAL LETTER Q}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL N}",
        ),
        (
            "\N{LATIN CAPITAL LETTER R}",
            "\N{LATIN CAPITAL LETTER R}",
            "it",
            "\N{SCRIPT CAPITAL R}",
        ),
        (
            "\N{LATIN CAPITAL LETTER S}",
            "\N{LATIN CAPITAL LETTER Z}",
            "it",
            "\N{MATHEMATICAL SCRIPT CAPITAL S}",
        ),
        (
            "\N{LATIN SMALL LETTER A}",
            "\N{LATIN SMALL LETTER D}",
            "it",
            "\N{MATHEMATICAL SCRIPT SMALL A}",
        ),
        (
            "\N{LATIN SMALL LETTER E}",
            "\N{LATIN SMALL LETTER E}",
            "it",
            "\N{SCRIPT SMALL E}",
        ),
        (
            "\N{LATIN SMALL LETTER F}",
            "\N{LATIN SMALL LETTER F}",
            "it",
            "\N{MATHEMATICAL SCRIPT SMALL F}",
        ),
        (
            "\N{LATIN SMALL LETTER G}",
            "\N{LATIN SMALL LETTER G}",
            "it",
            "\N{SCRIPT SMALL G}",
        ),
        (
            "\N{LATIN SMALL LETTER H}",
            "\N{LATIN SMALL LETTER N}",
            "it",
            "\N{MATHEMATICAL SCRIPT SMALL H}",
        ),
        (
            "\N{LATIN SMALL LETTER O}",
            "\N{LATIN SMALL LETTER O}",
            "it",
            "\N{SCRIPT SMALL O}",
        ),
        (
            "\N{LATIN SMALL LETTER P}",
            "\N{LATIN SMALL LETTER Z}",
            "it",
            "\N{MATHEMATICAL SCRIPT SMALL P}",
        ),
    ],
    "sf": {
        "rm": [
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "rm",
                "\N{MATHEMATICAL SANS-SERIF DIGIT ZERO}",
            ),
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER Z}",
                "rm",
                "\N{MATHEMATICAL SANS-SERIF CAPITAL A}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "rm",
                "\N{MATHEMATICAL SANS-SERIF SMALL A}",
            ),
            (
                "\N{GREEK CAPITAL LETTER ALPHA}",
                "\N{GREEK CAPITAL LETTER OMEGA}",
                "rm",
                0xE17D,
            ),
            (
                "\N{GREEK SMALL LETTER ALPHA}",
                "\N{GREEK SMALL LETTER OMEGA}",
                "rm",
                0xE196,
            ),
            ("\N{GREEK THETA SYMBOL}", "\N{GREEK THETA SYMBOL}", "rm", 0xE1B0),
            ("\N{GREEK PHI SYMBOL}", "\N{GREEK PHI SYMBOL}", "rm", 0xE1B1),
            ("\N{GREEK PI SYMBOL}", "\N{GREEK PI SYMBOL}", "rm", 0xE1B3),
            ("\N{GREEK RHO SYMBOL}", "\N{GREEK RHO SYMBOL}", "rm", 0xE1B2),
            (
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "rm",
                0xE1AF,
            ),
            ("\N{PARTIAL DIFFERENTIAL}", "\N{PARTIAL DIFFERENTIAL}", "rm", 0xE17C),
        ],
        "it": [
            # These numerals are actually upright.  We don't actually
            # want italic numerals ever.
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "rm",
                "\N{MATHEMATICAL SANS-SERIF DIGIT ZERO}",
            ),
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER Z}",
                "it",
                "\N{MATHEMATICAL SANS-SERIF ITALIC CAPITAL A}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "it",
                "\N{MATHEMATICAL SANS-SERIF ITALIC SMALL A}",
            ),
            (
                "\N{GREEK CAPITAL LETTER ALPHA}",
                "\N{GREEK CAPITAL LETTER OMEGA}",
                "rm",
                0xE17D,
            ),
            (
                "\N{GREEK SMALL LETTER ALPHA}",
                "\N{GREEK SMALL LETTER OMEGA}",
                "it",
                0xE1D8,
            ),
            ("\N{GREEK THETA SYMBOL}", "\N{GREEK THETA SYMBOL}", "it", 0xE1F2),
            ("\N{GREEK PHI SYMBOL}", "\N{GREEK PHI SYMBOL}", "it", 0xE1F3),
            ("\N{GREEK PI SYMBOL}", "\N{GREEK PI SYMBOL}", "it", 0xE1F5),
            ("\N{GREEK RHO SYMBOL}", "\N{GREEK RHO SYMBOL}", "it", 0xE1F4),
            (
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "it",
                0xE1F1,
            ),
        ],
        "bf": [
            (
                "\N{DIGIT ZERO}",
                "\N{DIGIT NINE}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD DIGIT ZERO}",
            ),
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER Z}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD CAPITAL A}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD SMALL A}",
            ),
            (
                "\N{GREEK CAPITAL LETTER ALPHA}",
                "\N{GREEK CAPITAL LETTER OMEGA}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD CAPITAL ALPHA}",
            ),
            (
                "\N{GREEK SMALL LETTER ALPHA}",
                "\N{GREEK SMALL LETTER OMEGA}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD SMALL ALPHA}",
            ),
            (
                "\N{GREEK THETA SYMBOL}",
                "\N{GREEK THETA SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD THETA SYMBOL}",
            ),
            (
                "\N{GREEK PHI SYMBOL}",
                "\N{GREEK PHI SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD PHI SYMBOL}",
            ),
            (
                "\N{GREEK PI SYMBOL}",
                "\N{GREEK PI SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD PI SYMBOL}",
            ),
            (
                "\N{GREEK KAPPA SYMBOL}",
                "\N{GREEK KAPPA SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD KAPPA SYMBOL}",
            ),
            (
                "\N{GREEK RHO SYMBOL}",
                "\N{GREEK RHO SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD RHO SYMBOL}",
            ),
            (
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "\N{GREEK LUNATE EPSILON SYMBOL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD EPSILON SYMBOL}",
            ),
            (
                "\N{PARTIAL DIFFERENTIAL}",
                "\N{PARTIAL DIFFERENTIAL}",
                "bf",
                "\N{MATHEMATICAL SANS-SERIF BOLD PARTIAL DIFFERENTIAL}",
            ),
            ("\N{NABLA}", "\N{NABLA}", "bf", "\N{MATHEMATICAL SANS-SERIF BOLD NABLA}"),
        ],
        "bfit": [
            (
                "\N{LATIN CAPITAL LETTER A}",
                "\N{LATIN CAPITAL LETTER Z}",
                "bfit",
                "\N{MATHEMATICAL BOLD ITALIC CAPITAL A}",
            ),
            (
                "\N{LATIN SMALL LETTER A}",
                "\N{LATIN SMALL LETTER Z}",
                "bfit",
                "\N{MATHEMATICAL BOLD ITALIC SMALL A}",
            ),
            (
                "\N{GREEK CAPITAL LETTER GAMMA}",
                "\N{GREEK CAPITAL LETTER OMEGA}",
                "bfit",
                "\N{MATHEMATICAL BOLD ITALIC CAPITAL GAMMA}",
            ),
            (
                "\N{GREEK SMALL LETTER ALPHA}",
                "\N{GREEK SMALL LETTER OMEGA}",
                "bfit",
                "\N{MATHEMATICAL BOLD ITALIC SMALL ALPHA}",
            ),
        ],
    },
    "tt": [
        (
            "\N{DIGIT ZERO}",
            "\N{DIGIT NINE}",
            "rm",
            "\N{MATHEMATICAL MONOSPACE DIGIT ZERO}",
        ),
        (
            "\N{LATIN CAPITAL LETTER A}",
            "\N{LATIN CAPITAL LETTER Z}",
            "rm",
            "\N{MATHEMATICAL MONOSPACE CAPITAL A}",
        ),
        (
            "\N{LATIN SMALL LETTER A}",
            "\N{LATIN SMALL LETTER Z}",
            "rm",
            "\N{MATHEMATICAL MONOSPACE SMALL A}",
        ),
    ],
}


@overload
def _normalize_stix_fontcodes(d: _EntryTypeIn) -> _EntryTypeOut: ...


@overload
def _normalize_stix_fontcodes(d: list[_EntryTypeIn]) -> list[_EntryTypeOut]: ...


@overload
def _normalize_stix_fontcodes(
    d: dict[str, list[_EntryTypeIn] | dict[str, list[_EntryTypeIn]]],
) -> dict[str, list[_EntryTypeOut] | dict[str, list[_EntryTypeOut]]]: ...


def _normalize_stix_fontcodes(d):
    if isinstance(d, tuple):
        return tuple(ord(x) if isinstance(x, str) and len(x) == 1 else x for x in d)
    elif isinstance(d, list):
        return [_normalize_stix_fontcodes(x) for x in d]
    elif isinstance(d, dict):
        return {k: _normalize_stix_fontcodes(v) for k, v in d.items()}


stix_virtual_fonts: dict[str, dict[str, list[_EntryTypeOut]] | list[_EntryTypeOut]]
stix_virtual_fonts = _normalize_stix_fontcodes(_stix_virtual_fonts)

# Free redundant list now that it has been normalized
del _stix_virtual_fonts

# Fix some incorrect glyphs.
stix_glyph_fixes = {
    # Cap and Cup glyphs are swapped.
    0x22D2: 0x22D3,
    0x22D3: 0x22D2,
}
