# SPDX-License-Identifier: Apache-2.0
# Copyright 2017 The Meson development team

# Public symbols for compilers sub-package when using 'from . import compilers'
__all__ = [
    "LANGUAGES_USING_LDFLAGS",
    "SUFFIX_TO_LANG",
    "Compiler",
    "RunResult",
    "all_languages",
    "c_suffixes",
    "clib_langs",
    "clink_langs",
    "compiler_from_language",
    "cpp_suffixes",
    "detect_c_compiler",
    "detect_compiler_for",
    "detect_cpp_compiler",
    "detect_cs_compiler",
    "detect_cuda_compiler",
    "detect_d_compiler",
    "detect_fortran_compiler",
    "detect_java_compiler",
    "detect_objc_compiler",
    "detect_objcpp_compiler",
    "detect_rust_compiler",
    "detect_static_linker",
    "detect_swift_compiler",
    "detect_vala_compiler",
    "get_base_compile_args",
    "get_base_link_args",
    "is_assembly",
    "is_header",
    "is_java",
    "is_known_suffix",
    "is_library",
    "is_llvm_ir",
    "is_object",
    "is_source",
    "lang_suffixes",
    "sort_clink",
]

# Bring symbols from each module into compilers sub-package namespace
from .compilers import (
    LANGUAGES_USING_LDFLAGS,
    SUFFIX_TO_LANG,
    Compiler,
    RunResult,
    all_languages,
    c_suffixes,
    clib_langs,
    clink_langs,
    cpp_suffixes,
    get_base_compile_args,
    get_base_link_args,
    is_assembly,
    is_header,
    is_java,
    is_known_suffix,
    is_library,
    is_llvm_ir,
    is_object,
    is_source,
    lang_suffixes,
    sort_clink,
)
from .detect import (
    compiler_from_language,
    detect_c_compiler,
    detect_compiler_for,
    detect_cpp_compiler,
    detect_cs_compiler,
    detect_cuda_compiler,
    detect_d_compiler,
    detect_fortran_compiler,
    detect_java_compiler,
    detect_objc_compiler,
    detect_objcpp_compiler,
    detect_rust_compiler,
    detect_static_linker,
    detect_swift_compiler,
    detect_vala_compiler,
)
